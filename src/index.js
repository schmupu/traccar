/**
 * traccar
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 4.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 1.0.16
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Attribute', 'model/Calendar', 'model/Command', 'model/CommandType', 'model/Device', 'model/DeviceTotalDistance', 'model/Driver', 'model/Event', 'model/Geofence', 'model/Group', 'model/Maintenance', 'model/Notification', 'model/NotificationType', 'model/Permission', 'model/Position', 'model/ReportStops', 'model/ReportSummary', 'model/ReportTrips', 'model/Server', 'model/Statistics', 'model/User', 'api/DefaultApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Attribute'), require('./model/Calendar'), require('./model/Command'), require('./model/CommandType'), require('./model/Device'), require('./model/DeviceTotalDistance'), require('./model/Driver'), require('./model/Event'), require('./model/Geofence'), require('./model/Group'), require('./model/Maintenance'), require('./model/Notification'), require('./model/NotificationType'), require('./model/Permission'), require('./model/Position'), require('./model/ReportStops'), require('./model/ReportSummary'), require('./model/ReportTrips'), require('./model/Server'), require('./model/Statistics'), require('./model/User'), require('./api/DefaultApi'));
  }
}(function(ApiClient, Attribute, Calendar, Command, CommandType, Device, DeviceTotalDistance, Driver, Event, Geofence, Group, Maintenance, Notification, NotificationType, Permission, Position, ReportStops, ReportSummary, ReportTrips, Server, Statistics, User, DefaultApi) {
  'use strict';

  /**
   * ERROR_UNKNOWN.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var Traccar = require('index'); // See note below*.
   * var xxxSvc = new Traccar.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new Traccar.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new Traccar.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new Traccar.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 4.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Attribute model constructor.
     * @property {module:model/Attribute}
     */
    Attribute: Attribute,
    /**
     * The Calendar model constructor.
     * @property {module:model/Calendar}
     */
    Calendar: Calendar,
    /**
     * The Command model constructor.
     * @property {module:model/Command}
     */
    Command: Command,
    /**
     * The CommandType model constructor.
     * @property {module:model/CommandType}
     */
    CommandType: CommandType,
    /**
     * The Device model constructor.
     * @property {module:model/Device}
     */
    Device: Device,
    /**
     * The DeviceTotalDistance model constructor.
     * @property {module:model/DeviceTotalDistance}
     */
    DeviceTotalDistance: DeviceTotalDistance,
    /**
     * The Driver model constructor.
     * @property {module:model/Driver}
     */
    Driver: Driver,
    /**
     * The Event model constructor.
     * @property {module:model/Event}
     */
    Event: Event,
    /**
     * The Geofence model constructor.
     * @property {module:model/Geofence}
     */
    Geofence: Geofence,
    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group: Group,
    /**
     * The Maintenance model constructor.
     * @property {module:model/Maintenance}
     */
    Maintenance: Maintenance,
    /**
     * The Notification model constructor.
     * @property {module:model/Notification}
     */
    Notification: Notification,
    /**
     * The NotificationType model constructor.
     * @property {module:model/NotificationType}
     */
    NotificationType: NotificationType,
    /**
     * The Permission model constructor.
     * @property {module:model/Permission}
     */
    Permission: Permission,
    /**
     * The Position model constructor.
     * @property {module:model/Position}
     */
    Position: Position,
    /**
     * The ReportStops model constructor.
     * @property {module:model/ReportStops}
     */
    ReportStops: ReportStops,
    /**
     * The ReportSummary model constructor.
     * @property {module:model/ReportSummary}
     */
    ReportSummary: ReportSummary,
    /**
     * The ReportTrips model constructor.
     * @property {module:model/ReportTrips}
     */
    ReportTrips: ReportTrips,
    /**
     * The Server model constructor.
     * @property {module:model/Server}
     */
    Server: Server,
    /**
     * The Statistics model constructor.
     * @property {module:model/Statistics}
     */
    Statistics: Statistics,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The DefaultApi service constructor.
     * @property {module:api/DefaultApi}
     */
    DefaultApi: DefaultApi
  };

  return exports;
}));
